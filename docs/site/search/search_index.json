{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"In\u00edcio","text":""},{"location":"#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Pix Verifier nasceu para suprir uma necessidade da drogaria dos meus pais. Eu precisava que os colaboradores pudessem acompanhar as transfer\u00eancia recebidas via Pix que os clientes faziam. Apesar de ja existir solu\u00e7\u00e3o para isso no mercado, elas envolvem a cobran\u00e7a de taxas por opera\u00e7\u00e3o.</p> <p>Com o Pix Verifier \u00e9 poss\u00edvel minimizar o risco de fraude, uma vez que o valor e a confirma\u00e7\u00e3o do pagamento \u00e9 feita sem problemas, ter mais agilidade no atendimento pois n\u00e3o \u00e9 necess\u00e1rio confirma manualmente na conta a transa\u00e7\u00e3o e mais tranquilidade.</p>"},{"location":"#requisitos","title":"Requisitos","text":"<p>O sistema foi projetado para ser executado localmente ou na rede local.</p> <p>Warning</p> <p>Esse sistema n\u00e3o foi projetado para ser disponibilizado p\u00fablicamente na internet, n\u00e3o foram implementadas seguran\u00e7as adicionais necess\u00e1rias para esse cen\u00e1rio!</p> Requisito Vers\u00e3o S.O. Windows ou Linux (ADM64) PHP 8.3.8 Python 3.12.8 PostgreSQL 16 <p>Os recursos de hardware s\u00e3o o necess\u00e1rio para o seu sistema operacional funcionar, como trata-se de uma aplica\u00e7\u00e3o local com n\u00famero limitado de usu\u00e1rios n\u00e3o \u00e9 esperando consumo elevado de recursos.</p>"},{"location":"#bancos-suportados","title":"Bancos suportados","text":"<p>Atualmente essa solu\u00e7\u00e3o atende apenas os clientes correntistas PJ do Banco Inter, pois as APIs disponibilizadas pelo banco n\u00e3o permitem acesso as contas pessoa f\u00edsica. O sistema foi estruturado de forma que seja simplificada a inclus\u00e3o de novos bancos, contudo como esse \u00e9 um projeto pessoal estou limitado aos bancos que trabalho para fazer a integra\u00e7\u00e3o.</p>"},{"location":"integration/","title":"Integra\u00e7\u00f5es","text":"<p>Em desenvolvimento</p>"},{"location":"banks/inter/","title":"Banco Inter","text":""},{"location":"banks/inter/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Banco Inter disponibiliza o acesso gratuito as APIs, mas somente aos clientes Pessoa Jur\u00eddica, ent\u00e3o se sua conta for Pessoa F\u00edsica infelizmente n\u00e3o ser\u00e1 poss\u00edvel fazer as concilia\u00e7\u00f5es dos Pixs na sua conta atrav\u00e9s do Pix Verifier.</p> <p>Para utilizar o Pix Verifier ser\u00e1 necess\u00e1rio criar uma integra\u00e7\u00e3o onde o Inter vai disponibilizar duas chaves, o ClientID e o ClientSecret, al\u00e9m de um certificado e chave para criptografar a comunica\u00e7\u00e3o com banco.</p>"},{"location":"banks/inter/#criando-uma-integracao","title":"Criando uma integra\u00e7\u00e3o","text":"<p>Primeiramente fa\u00e7a o login na sua conta PJ pelo Internet Banking.</p> <p>Clique em Solu\u00e7\u00f5es para sua empresa, e em seguida Nova integra\u00e7\u00e3o.</p> <p></p> <p>Na tela de nova integra\u00e7\u00e3o, crie um nome e uma descri\u00e7\u00e3o para facilitar a identifica\u00e7\u00e3o.</p> <p></p>"},{"location":"banks/inter/#escopo-da-integracao","title":"Escopo da integra\u00e7\u00e3o","text":"<p>Agora voc\u00ea dever\u00e1 selecionar o escopo da integra\u00e7\u00e3o.</p> <p></p> <p>Isso significa que se voc\u00ea diz que uma integra\u00e7\u00e3o tem acesso somente a consultar o extrato, ela n\u00e3o vai poder ser usada para aprovar um pagamento por exemplo. \u00c9 uma camada a mais de seguran\u00e7a, e como o Pix Verifier apenas realiza consultas, selecione apenas as op\u00e7\u00f5es <code>Consultar pagamentos Pix</code> e <code>Consultar extrato e saldo</code>.</p> <p></p> <p>Clique no bot\u00e3o Criar integra\u00e7\u00e3o para finalizar. </p>"},{"location":"banks/inter/#credenciais-de-acesso-e-certificado","title":"Credenciais de acesso e certificado","text":"<p>Ap\u00f3s a cria\u00e7\u00e3o, voc\u00ea ser\u00e1 direcionado \u00e0 tela Gest\u00e3o de Integra\u00e7\u00f5es, onde sua integra\u00e7\u00e3o ser\u00e1 exibida com o status \"Novo\". Expandindo os detalhes voc\u00ea poder\u00e1 ver mais algumas informa\u00e7\u00f5es sobre a integra\u00e7\u00e3o, como quais permiss\u00f5es e as contas correntes que est\u00e1 associada. Nesta tela voc\u00ea encontrar\u00e1 o bot\u00e3o para baixar a chave e certificado.</p> <p></p> <p>ATEN\u00c7\u00c3O</p> <p>Essa tela \u00e9 exibida somente UMA \u00daNICA VEZ, depois que voc\u00ea fizer o download n\u00e3o tem como fazer o download novamente, sendo necess\u00e1rio criar uma nova integra\u00e7\u00e3o. Portando ap\u00f3s a configura\u00e7\u00e3o do Pix Verifier recomendo guardar esse certificado num pendrive e em local seguro.</p> <p>Ao baixar a chave privada e o certificado, as respectivas credenciais ser\u00e3o geradas e exibidas na mesma tela de detalhes, enquanto a integra\u00e7\u00e3o passar\u00e1 por um processo de valida\u00e7\u00e3o. Ap\u00f3s alguns minutos, o status ser\u00e1 atualizado para Ativo e a integra\u00e7\u00e3o estar\u00e1 pronta para utiliza\u00e7\u00e3o.</p> <p></p> <p>As credenciais de acesso podem ser acessadas a qualquer tempo, diferente do certificado que s\u00f3 pode ser baixado uma \u00fanica vez. Anote o ClientID e o ClientSecret que ser\u00e1 necess\u00e1rio para configurar o Pix Verifier.</p> <p>VALIDADE DO CERTIFICADO</p> <p>O certificado tem validade de 1 ano a partir da gera\u00e7\u00e3o do mesmo. Ap\u00f3s esse tempo uma nova integra\u00e7\u00e3o dever\u00e1 ser criada, ou renovar a existente para que seja emitido um novo certificado.</p> <p>SEGURAN\u00c7A DA CONTA</p> <p>O ClientID e o ClientSecret s\u00e3o credenciais privadas de acesso \u00e0 sua conta e n\u00e3o devem ser compartilhadas em locais p\u00fablicos.</p>"},{"location":"banks/overview/","title":"Vis\u00e3o Geral","text":""},{"location":"banks/overview/#como-o-pix-verifier-funciona","title":"Como o Pix Verifier funciona?","text":"<p>O sistema atua monitorando o extrato da conta e filtrando apenas as transa\u00e7\u00f5es do tipo Pix, e o acesso a conta \u00e9 por meio das APIs disponibilizadas pelas institui\u00e7\u00f5es financeiras, que determinam como e quem deve acess\u00e1-las.</p> <p>Normalmente as IFs (1) tamb\u00e9m disponilizam o cadastramento de um webhook (2), dessa forma voc\u00ea \u00e9 avisado pelo banco quando recebe uma transa\u00e7\u00e3o. Esse parece ser o caminho mais l\u00f3gico a se seguir, contudo, criar um webhook implica em disponibilizar um servi\u00e7o na internet acarretando em custos adicionais com a contrata\u00e7\u00e3o de VPS (Virtual Private Server) (3) ou hospedagens. </p> <ol> <li> <p>IF: Institui\u00e7\u00e3o Financeira.</p> </li> <li> <p>Webhook: \u00c9 um ponto de entrada de uma API, onde outros sistemas podem enviar informa\u00e7\u00f5es.</p> </li> <li> <p>VPS: Uma m\u00e1quina virtual que \u00e9 executada em um data center, possui alta disponibilidade e pode ser acessada publicamente pela internet.</p> </li> </ol> <p>Sendo assim, a consulta de extratos \u00e9 mais simples e obt\u00e9m o mesmo resultado esperado sem nenhum custo adicional.</p>"},{"location":"banks/overview/#bancos-suportados","title":"Bancos suportados","text":"<p>Neste momento o \u00fanico banco suportado \u00e9 o Banco Inter, pois fico limitado ao banco que tenho movimenta\u00e7\u00f5es para poder fazer a integra\u00e7\u00e3o e testes, contudo o Pix Verifier foi projetado para que fosse poss\u00edvel a inclus\u00e3o de novas institui\u00e7\u00f5es financeiras. Acesse a p\u00e1gina de Integra\u00e7\u00e3o para saber mais.</p>"},{"location":"firsts-steps/install/","title":"Preparando o ambiente","text":"<p>Voc\u00ea pode instalar o Pix Verifier de duas formas:</p> <ol> <li> <p>Clonando o resposit\u00f3rio no Github e configurando o servidor e cada servi\u00e7o manualmente, nginx, php, python... Sem d\u00favidas \u00e9 a forma mais complicada (e dolorosa) de se fazer isso.</p> </li> <li> <p>Rodando via container, disponibilizado no Docker Hub, ou voc\u00ea mesmo buildando atrav\u00e9s do <code>Dockerfile</code> dispon\u00edvel no reposit\u00f3rio.</p> </li> </ol> <p>Nessa documenta\u00e7\u00e3o cobriremos a forma mais simples que \u00e9 baixando a imagem do Docker Hub e subindo os servi\u00e7os.</p> <ul> <li> <p> Windows</p> <p>Instale o Pix Verifier no sistema operacional Windows.</p> <p> Ver conte\u00fado</p> </li> <li> <p> Linux</p> <p>Instale o Pix Verifier no sistema operacional Linux.</p> <p> Ver conte\u00fado </p> </li> </ul>"},{"location":"firsts-steps/linux-install/","title":"Instala\u00e7\u00e3o no Linux","text":""},{"location":"firsts-steps/linux-install/#docker-engine","title":"Docker Engine","text":"<p>Abra o terminal do Linux e digite o seguinte comando:</p> <p><code>sudo curl -fsSL https://get.docker.com -o get-docker.sh | sh get-docker.sh</code></p> <p>Esse script ir\u00e1 configurar os reposit\u00f3rios do Docker, baixar e habilitar o servi\u00e7o de forma autom\u00e1tica. Recomendo reiniciar o computador ap\u00f3s a instala\u00e7\u00e3o para garantir que tudo deu certo.</p> <p>Para conferir que tudo realmente deu certo, digite o comando <code>docker --version</code>, se a instala\u00e7\u00e3o ocorreu sem problemas voc\u00ea ter\u00e1 uma saida parecida com isso no seu terminal:</p> Terminal Linux<pre><code>filipe@pop-os:~$ docker --version\nDocker version 27.5.0, build a187fa5\n</code></pre>"},{"location":"firsts-steps/linux-install/#preparando-os-arquivos","title":"Preparando os arquivos","text":""},{"location":"firsts-steps/linux-install/#docker-compose","title":"Docker Compose","text":"<p>Primeiramente crie um novo diret\u00f3rio para organizar os arquivos do Pix Verifier nele. Entre na pasta e crie o <code>docker-compose.yaml</code>:</p> <p>Terminal Linux<pre><code>filipe@pop-os:~$ mkdir pix-verifier\nfilipe@pop-os:~$ cd pix-verifier\nfilipe@pop-os:~/pix-verifier$ touch docker-compose.yaml\n</code></pre> Usando o editor de texto de sua prefer\u00eancia cole o conte\u00fado abaixo dentro do <code>docker-compose.yaml</code> que acabou de criar.</p> docker-compose.yaml<pre><code>services:\n  postgres:\n    container_name: postgres\n    image: postgres:16-alpine3.19\n    hostname: postgres16\n    restart: unless-stopped\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./sql:/docker-entrypoint-initdb.d\n    environment:\n      - TZ=America/Fortaleza\n      - POSTGRES_USER=dbadmin\n      - POSTGRES_PASSWORD=SENHA_BANCO_DE_DADOS\n    ports:\n      - \"5432:5432\"\n    networks:\n      - pixverifier_network\n\n  pix-verifier:\n    image: filipebezerrasantos/pix-verifier:v2.0\n    hostname: pix-verifier\n    container_name: pix-verifier\n    restart: unless-stopped\n    environment:\n      - TZ=America/Fortaleza\n      - DB_HOST=postgres\n      - DB_NAME=pixverifier\n      - DB_USER=dbadmin\n      - DB_PASS=SENHA_BANCO_DE_DADOS\n    volumes:\n      - pixverifier_certs:/var/www/services/certs\n    ports:\n      - \"80:80\"\n    networks:\n      - pixverifier_network\n\nvolumes:\n  postgres_data:\n    name: postgres_data\n  pixverifier_certs:\n    name: pixverifier_certs\n\nnetworks:\n  pixverifier_network:\n    name: pixverifier_network\n</code></pre> <p>Nesse arquivos estamos criando um servi\u00e7o com dois containers, o postgres que \u00e9 o nosso banco de dados, e o pix-verifier, que \u00e9 o sistema em si.</p> <p>Para melhorar a seguran\u00e7a, sugiro que altere as linhas abaixo no servi\u00e7o do postgres:</p> docker-compose.yaml &gt;&gt; postgres<pre><code>    environment:\n        - TZ=America/Fortaleza\n        - POSTGRES_USER=dbadmin\n        - POSTGRES_PASSWORD=SENHA_BANCO_DE_DADOS\n</code></pre> <p>Crie uma senha segura para o Postgres, e coloque esse mesma senha nas vari\u00e1veis do pix-service:</p> docker-compose.yaml &gt;&gt; pix-service<pre><code>    environment:\n      - TZ=America/Fortaleza\n      - DB_HOST=postgres\n      - DB_NAME=pixverifier\n      - DB_USER=dbadmin\n      - DB_PASS=SENHA_BANCO_DE_DADOS\n</code></pre> <p>Com isso finalizamos a configura\u00e7\u00e3o dos servi\u00e7os.</p>"},{"location":"firsts-steps/linux-install/#schema-do-banco-de-dados","title":"Schema do banco de dados","text":"<p>No mesmo diret\u00f3rio onde criou o <code>docker-compose.yaml</code>, crie o sub-diret\u00f3rio <code>sql</code> e dentro dela crie um arquivo chamado <code>database.sql</code> e cole o conte\u00fado abaixo:</p> Terminal Linux<pre><code>filipe@pop-os:~/pix-verifier$ mkdir sql\nfilipe@pop-os:~/pix-verifier$ cd sql\nfilipe@pop-os:~/pix-verifier/sql$ touch database.sql\n</code></pre> database.sql<pre><code>CREATE DATABASE pixverifier;\n\n\\c pixverifier\n\nSET statement_timeout = 0;\nSET lock_timeout = 0;\nSET idle_in_transaction_session_timeout = 0;\nSET client_encoding = 'UTF8';\nSET standard_conforming_strings = on;\nSELECT pg_catalog.set_config('search_path', '', false);\nSET check_function_bodies = false;\nSET xmloption = content;\nSET client_min_messages = warning;\nSET row_security = off;\n\nSET default_tablespace = '';\n\nSET default_table_access_method = heap;\n\nCREATE TABLE public.bank (\n    bankid integer NOT NULL,\n    bankname character varying(100) NOT NULL\n);\n\nALTER TABLE public.bank OWNER TO dbadmin;\n\nCREATE TABLE public.bankaccount (\n    accountid integer NOT NULL,\n    accountname character varying(30) NOT NULL,\n    bankid integer NOT NULL,\n    branchnumber character varying(10) NOT NULL,\n    accountnumber character varying(20) NOT NULL,\n    clientid character varying(100),\n    clientsecret character varying(100),\n    certfile character varying(100),\n    certkeyfile character varying(100),\n    accesstoken character varying(100),\n    tokenexpireat timestamp without time zone,\n    ignoredsenders text\n);\n\nALTER TABLE public.bankaccount OWNER TO dbadmin;\n\nCREATE SEQUENCE public.bankaccount_accountid_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER SEQUENCE public.bankaccount_accountid_seq OWNER TO dbadmin;\n\nALTER SEQUENCE public.bankaccount_accountid_seq OWNED BY public.bankaccount.accountid;\n\nCREATE TABLE public.receivedpix (\n    e2eid character varying(100) NOT NULL,\n    date timestamp without time zone NOT NULL,\n    value numeric(15,2) NOT NULL,\n    payer character varying(100) NOT NULL,\n    payerdoc character varying(100) NOT NULL,\n    description character varying(140),\n    payerbank character varying(100) NOT NULL,\n    banktransaction text,\n    accountid integer NOT NULL\n);\n\nALTER TABLE public.receivedpix OWNER TO dbadmin;\n\nALTER TABLE ONLY public.bankaccount ALTER COLUMN accountid SET DEFAULT nextval('public.bankaccount_accountid_seq'::regclass);\n\nALTER TABLE ONLY public.bank\n    ADD CONSTRAINT bank_pk PRIMARY KEY (bankid);\n\nALTER TABLE ONLY public.bankaccount\n    ADD CONSTRAINT bankaccount_pk PRIMARY KEY (accountid);\n\nALTER TABLE ONLY public.receivedpix\n    ADD CONSTRAINT receivedpix_pk PRIMARY KEY (e2eid);\n\nCREATE INDEX receivedpix_accountid_idx ON public.receivedpix USING btree (accountid);\n\nALTER TABLE ONLY public.bankaccount\n    ADD CONSTRAINT bankaccount_bank_fk FOREIGN KEY (bankid) REFERENCES public.bank(bankid) ON UPDATE CASCADE ON DELETE CASCADE;\n\nALTER TABLE ONLY public.receivedpix\n    ADD CONSTRAINT receivedpix_bankaccount_fk FOREIGN KEY (accountid) REFERENCES public.bankaccount(accountid) ON UPDATE CASCADE ON DELETE CASCADE;\n\nCREATE TABLE public.users (\n    user_id serial PRIMARY KEY,\n    username character varying(100) NOT NULL,\n    pwd character varying(255) NOT NULL,\n    useraccess integer NOT NULL\n);\n\nALTER TABLE public.users OWNER TO dbadmin;\n\nINSERT INTO public.users (username, pwd, useraccess) \nVALUES ('admin', '$2y$10$Ve1qGNP9X.7nThu4LXOwVuWc57jN3PhvYl.b/ABFEuw8nE3LPSDVe', 2);\n</code></pre> <p>Esse arquivo vai criar as tabelas necess\u00e1rias no banco dados que o Pix Verifier precisa para funcionar. Ao final sua estrutura de diret\u00f3rios deve estar mais ou menos assim:</p> <pre><code>pix-verifier/\n\u251c\u2500 sql/\n\u2502  \u251c\u2500 database.sql\n\u251c\u2500 docker-compose.yaml\n</code></pre>"},{"location":"firsts-steps/linux-install/#iniciando-o-servico","title":"Iniciando o servi\u00e7o","text":"<p>Ainda dentro do diret\u00f3rio <code>pix-verifier</code> digite o comando <code>docker compose up -d</code> para inicar os containers.</p> Terminal Linux<pre><code>filipe@pop-os:~/pix-verifier$ docker compose up -d\n</code></pre> <p>O Docker vai baixar as imagens necess\u00e1rias e inicar os container, quando esse processo terminal, abra seu navegador e digite <code>http://localhost</code> se aparecer a p\u00e1gina inicial do Pix Verifier significa que os containers subiram corretamente.</p>"},{"location":"firsts-steps/windows-install/","title":"Instalando o Docker","text":"<p>Primeiramente, baixe o Docker Desktop no site do Docker:</p> <p>https://www.docker.com/products/docker-desktop/</p> <p>Nota</p> <p>Para o sistema operacional Windows, existe duas vers\u00f5es para download, AMD64 e ARM64, contudo o Pix Verifier deve ser executado em uma plataforma AMD64!</p> <p>Execute o instalador e basta seguir o padr\u00e3o de instala\u00e7\u00e3o Windows (next, next, next e finish).</p>"},{"location":"firsts-steps/windows-install/#preparando-os-arquivos","title":"Preparando os arquivos","text":""},{"location":"firsts-steps/windows-install/#docker-compose","title":"Docker Compose","text":"<p>Se voc\u00ea baixou o reposit\u00f3rio do Github, localize dentro da pasta onde voc\u00ea baixou, o arquivo <code>docker-compose.yaml</code>, ou crie uma pasta e dentro dela crie um novo arquivo chamado <code>docker-compose.yaml</code>, abra o editor e cole o conte\u00fado abaixo:</p> docker-compose.yaml<pre><code>services:\n  postgres:\n    container_name: postgres\n    image: postgres:16-alpine3.19\n    hostname: postgres16\n    restart: unless-stopped\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./sql:/docker-entrypoint-initdb.d\n    environment:\n      - TZ=America/Fortaleza\n      - POSTGRES_USER=dbadmin\n      - POSTGRES_PASSWORD=SENHA_BANCO_DE_DADOS\n    ports:\n      - \"5432:5432\"\n    networks:\n      - pixverifier_network\n\n  pix-verifier:\n    image: filipebezerrasantos/pix-verifier:v2.0\n    hostname: pix-verifier\n    container_name: pix-verifier\n    restart: unless-stopped\n    environment:\n      - TZ=America/Fortaleza\n      - DB_HOST=postgres\n      - DB_NAME=pixverifier\n      - DB_USER=dbadmin\n      - DB_PASS=SENHA_BANCO_DE_DADOS\n    volumes:\n      - pixverifier_certs:/var/www/services/certs\n    ports:\n      - \"80:80\"\n    networks:\n      - pixverifier_network\n\nvolumes:\n  postgres_data:\n    name: postgres_data\n  pixverifier_certs:\n    name: pixverifier_certs\n\nnetworks:\n  pixverifier_network:\n    name: pixverifier_network\n</code></pre> <p>Nesse arquivos estamos criando um servi\u00e7o com dois containers, o postgres que \u00e9 o nosso banco de dados, e o pix-verifier, que \u00e9 o sistema em si.</p> <p>Para melhorar a seguran\u00e7a, sugiro que altere as linhas abaixo no servi\u00e7o do postgres:</p> docker-compose.yaml &gt;&gt; postgres<pre><code>    environment:\n        - TZ=America/Fortaleza\n        - POSTGRES_USER=dbadmin\n        - POSTGRES_PASSWORD=SENHA_BANCO_DE_DADOS\n</code></pre> <p>Crie uma senha segura para o Postgres, e coloque esse mesma senha nas vari\u00e1veis do pix-service:</p> docker-compose.yaml &gt;&gt; pix-service<pre><code>    environment:\n      - TZ=America/Fortaleza\n      - DB_HOST=postgres\n      - DB_NAME=pixverifier\n      - DB_USER=dbadmin\n      - DB_PASS=SENHA_BANCO_DE_DADOS\n</code></pre> <p>Com isso finalizamos a configura\u00e7\u00e3o dos servi\u00e7os.</p>"},{"location":"firsts-steps/windows-install/#schema-do-banco-de-dados","title":"Schema do banco de dados","text":"<p>Na mesma pasta onde criou o <code>docker-compose.yaml</code>, crie uma nova pasta e dentro dela crie um arquivo chamado <code>database.sql</code> e cole o conte\u00fado abaixo:</p> database.sql<pre><code>CREATE DATABASE pixverifier;\n\n\\c pixverifier\n\nSET statement_timeout = 0;\nSET lock_timeout = 0;\nSET idle_in_transaction_session_timeout = 0;\nSET client_encoding = 'UTF8';\nSET standard_conforming_strings = on;\nSELECT pg_catalog.set_config('search_path', '', false);\nSET check_function_bodies = false;\nSET xmloption = content;\nSET client_min_messages = warning;\nSET row_security = off;\n\nSET default_tablespace = '';\n\nSET default_table_access_method = heap;\n\nCREATE TABLE public.bank (\n    bankid integer NOT NULL,\n    bankname character varying(100) NOT NULL\n);\n\nALTER TABLE public.bank OWNER TO dbadmin;\n\nCREATE TABLE public.bankaccount (\n    accountid integer NOT NULL,\n    accountname character varying(30) NOT NULL,\n    bankid integer NOT NULL,\n    branchnumber character varying(10) NOT NULL,\n    accountnumber character varying(20) NOT NULL,\n    clientid character varying(100),\n    clientsecret character varying(100),\n    certfile character varying(100),\n    certkeyfile character varying(100),\n    accesstoken character varying(100),\n    tokenexpireat timestamp without time zone,\n    ignoredsenders text\n);\n\nALTER TABLE public.bankaccount OWNER TO dbadmin;\n\nCREATE SEQUENCE public.bankaccount_accountid_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER SEQUENCE public.bankaccount_accountid_seq OWNER TO dbadmin;\n\nALTER SEQUENCE public.bankaccount_accountid_seq OWNED BY public.bankaccount.accountid;\n\nCREATE TABLE public.receivedpix (\n    e2eid character varying(100) NOT NULL,\n    date timestamp without time zone NOT NULL,\n    value numeric(15,2) NOT NULL,\n    payer character varying(100) NOT NULL,\n    payerdoc character varying(100) NOT NULL,\n    description character varying(140),\n    payerbank character varying(100) NOT NULL,\n    banktransaction text,\n    accountid integer NOT NULL\n);\n\nALTER TABLE public.receivedpix OWNER TO dbadmin;\n\nALTER TABLE ONLY public.bankaccount ALTER COLUMN accountid SET DEFAULT nextval('public.bankaccount_accountid_seq'::regclass);\n\nALTER TABLE ONLY public.bank\n    ADD CONSTRAINT bank_pk PRIMARY KEY (bankid);\n\nALTER TABLE ONLY public.bankaccount\n    ADD CONSTRAINT bankaccount_pk PRIMARY KEY (accountid);\n\nALTER TABLE ONLY public.receivedpix\n    ADD CONSTRAINT receivedpix_pk PRIMARY KEY (e2eid);\n\nCREATE INDEX receivedpix_accountid_idx ON public.receivedpix USING btree (accountid);\n\nALTER TABLE ONLY public.bankaccount\n    ADD CONSTRAINT bankaccount_bank_fk FOREIGN KEY (bankid) REFERENCES public.bank(bankid) ON UPDATE CASCADE ON DELETE CASCADE;\n\nALTER TABLE ONLY public.receivedpix\n    ADD CONSTRAINT receivedpix_bankaccount_fk FOREIGN KEY (accountid) REFERENCES public.bankaccount(accountid) ON UPDATE CASCADE ON DELETE CASCADE;\n\nCREATE TABLE public.users (\n    user_id serial PRIMARY KEY,\n    username character varying(100) NOT NULL,\n    pwd character varying(255) NOT NULL,\n    useraccess integer NOT NULL\n);\n\nALTER TABLE public.users OWNER TO dbadmin;\n\nINSERT INTO public.users (username, pwd, useraccess) \nVALUES ('admin', '$2y$10$Ve1qGNP9X.7nThu4LXOwVuWc57jN3PhvYl.b/ABFEuw8nE3LPSDVe', 2);\n</code></pre> <p>Esse arquivo tem a estrutura do banco dados que o Pix Verifier precisa para funcionar. Ao final sua estrutura de diret\u00f3rios deve estar mais ou menos assim:</p> <pre><code>pix-verifier/\n\u251c\u2500 sql/\n\u2502  \u251c\u2500 database.sql\n\u251c\u2500 docker-compose.yaml\n</code></pre>"},{"location":"firsts-steps/windows-install/#iniciando-o-servico","title":"Iniciando o servi\u00e7o","text":"<p>Primeiramente verifique se o Docker est\u00e1 em execu\u00e7\u00e3o, depois clique com o bot\u00e3o direito dentro da pasta onde voc\u00ea criou os arquivos, no menu suspenso clique em Abrir no Terminal.</p> <p></p> <p>Abrindo a janela do terminal estando na mesma pasta dos arquivos criados, \u00e9 s\u00f3 digitar o comando <code>docker compose up -d</code> e aguardar o download das imagens.</p> <p></p> <p>Quando terminar o download o Docker vai automaticamente subir os servi\u00e7os, se voc\u00ea voltar l\u00e1 no Docker Desktop dever\u00e1 ver algo semelhante a imagem abaixo, agora acesse no seu navegador <code>http://localhost</code>, se aparecer a p\u00e1gina inicial do Pix Verifier significa que os containers subiram corretamente, restando apenas agora a configura\u00e7\u00e3o final para come\u00e7ar a funcionar.</p> <p></p>"},{"location":"firsts-steps/windows-install/#iniciar-o-docker-junto-ao-windows","title":"Iniciar o Docker junto ao Windows","text":"<p>No arquivo do <code>docker-compose.yaml</code> os containers est\u00e3o configurados para iniciarem automaticamente a menos que voc\u00ea d\u00ea o comando para para o container, contudo, para que isso funcione o Docker Desktop tamb\u00e9m precisar ser habilitado junto ao Windows.</p> <p>Abra o Docker Desktop e clique na engrenagem na barra superior, na tela que foi apresentada marque a caixa que diz Start Docker Desktop when you sign in to your computer e por \u00faltimo clique em Apply &amp; Restart.</p> <p></p>"},{"location":"manual/","title":"P\u00e1gina Principal","text":""},{"location":"manual/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A utiliza\u00e7\u00e3o do Pix Verifier \u00e9 bem simples, basicamente tudo est\u00e1 na p\u00e1gina principal, sendo poss\u00edvel filtrar por data, buscar por emissor ou escolher a conta que deseja monitorar, uma vez que \u00e9 poss\u00edvel cadastrar mais de uma conta.</p> <p></p> <p>Na barra superior do lado direto h\u00e1 o switch para habilitar as notifica\u00e7\u00f5es via \u00e1udio e o bot\u00e3o para o painel administrativo do Pix Verifier. Na parte principal da p\u00e1gina, as transa\u00e7\u00f5es s\u00e3o apresentadas de forma tabular.</p>"},{"location":"manual/#tabela-de-transacoes","title":"Tabela de transa\u00e7\u00f5es","text":"<p>Na tabela de transa\u00e7\u00f5es, s\u00e3o exibidas as transfer\u00eancias que foram conciliadas pelo Pix Service, s\u00e3o ordenadas de forma decrescente, ou seja, as \u00faltimas transfer\u00eancias recebidas s\u00e3o exibidas primeiro, apresentando as informa\u00e7\u00f5es b\u00e1sicas como o banco, conta que recebeu o cr\u00e9dito, valor, nome do pagador, data e hora  da transa\u00e7\u00e3o.</p> <p>Por padr\u00e3o a tabela vai ser preenchida com as \u00faltimas 10 transa\u00e7\u00f5es, exibindo os bot\u00f5es de pagina\u00e7\u00e3o caso haja mais de transa\u00e7\u00f5es recebidas no dia.</p>"},{"location":"manual/#detalhes-da-transacao","title":"Detalhes da transa\u00e7\u00e3o","text":"<p>No campo <code>Detalhes</code>, clicando no bot\u00e3o , o sistema busca e exibe na tela as informa\u00e7\u00f5es adicionais da transa\u00e7\u00e3o.</p> <p></p>"},{"location":"manual/#status-do-servico","title":"Status do Servi\u00e7o","text":"<p>O Pix Verifier \u00e9 composto por dois servi\u00e7os, o Pix Verifier WEB e o Pix Service, sendo esse \u00faltimo o que roda em background fazendo as consultas nas APIs e salvando no banco de dados as transfer\u00eancias Pix. Esse item pode apresentar dois estados diferentes:</p> <p>Status do servi\u00e7o: \ud83d\udfe2</p> <p>Indica que o Pix Service est\u00e1 operante, \u00e9 esperado que as transa\u00e7\u00f5es recebidas sejam atualizadas na tabela.</p> <p>Status do servi\u00e7o: \ud83d\udd34</p> <p>Indica que o Pix Service n\u00e3o est\u00e1 em execu\u00e7\u00e3o. Verificar no painel administrativo detalhes do status e consultar os logs.</p>"},{"location":"manual/#seletor-de-contas","title":"Seletor de contas","text":"<p>O Pix Verifier permite que voc\u00ea cadastre mais de uma conta para monitorar, para verificar as transa\u00e7\u00f5es recebidas nas outras contas, basta escolher a conta na lista.</p>"},{"location":"manual/#filtrar-por-data","title":"Filtrar por data","text":"<p>\u00c9 possivel consultar as transa\u00e7\u00f5es de datas anteriores informado a data de in\u00edcio e a data final. O padr\u00e3o de exibi\u00e7\u00e3o na tabela de transa\u00e7\u00f5es \u00e9 o mesmo, com as 10 \u00faltimas transa\u00e7\u00f5es do per\u00edodo selecionado.</p> <p>Exemplo: Ao filtrar as transa\u00e7\u00f5es do dia 15/01/2025 at\u00e9 17/01/2025 a tabela de transa\u00e7\u00f5es ser\u00e1 preenchida a partir da \u00faltima transa\u00e7\u00e3o recebida do dia 17/01/2025, exibindo as 10 \u00faltimas e habilitando a pagina\u00e7\u00e3o caso necess\u00e1rio.</p> <p></p>"},{"location":"manual/#buscar-por-emissor","title":"Buscar por emissor","text":"<p>A busca por emissor vai retornar todas as transa\u00e7\u00f5es recebidas do CPF/CNPJ informado. Basta informa o CPF ou CNPJ sem pontua\u00e7\u00e3o ou caracteres especiais e clicar em Buscar.</p>"},{"location":"manual/#verificador-de-atualizacao","title":"Verificador de atualiza\u00e7\u00e3o","text":"<p>No rodap\u00e9 da p\u00e1gina do lado esquedo na informa\u00e7\u00e3o de copyright h\u00e1 um indicador que existe uma nova vers\u00e3o dispon\u00edvel do Pix Verifier. Esse indicador \u00e9 representado por um pequeno c\u00edrculo vermelho que ao passar o mouse por cima informa qual a nova vers\u00e3o dispon\u00edvel no Github.</p>"},{"location":"manual/#notificacao-por-audio","title":"Notifica\u00e7\u00e3o por \u00e1udio","text":"<p>Al\u00e9m da indica\u00e7\u00e3o visual quando uma nova transa\u00e7\u00e3o \u00e9 recebida, h\u00e1 tamb\u00e9m a possibilidade de habilitar uma notifica\u00e7\u00e3o por \u00e1udio. Para ativar, clique no switch localizado ao lado do bot\u00e3o Administra\u00e7\u00e3o na barra superior da p\u00e1gina.</p>"},{"location":"manual/admin-panel/","title":"Administra\u00e7\u00e3o","text":"<p>No painel administrativo \u00e9 onde se cadastra as contas, controla o Pix Service e consulta os logs do sistema. Ele \u00e9 dividido em tr\u00eas p\u00e1ginas, Dashboard, Contas e Logs. </p> <p>Credenciais de acesso</p> <p>Para acessar a administra\u00e7\u00e3o, o usu\u00e1rio e senha padr\u00e3o \u00e9 admin. </p>"},{"location":"manual/admin-panel/#dashboard","title":"Dashboard","text":"<p>No dashboard \u00e9 onde se habilita ou desabilita o Pix Service, al\u00e9m disso o sistema exibe quantas contas est\u00e3o cadastradas e o valor total conciliado pelo Pix Verifier.</p> <p></p>"},{"location":"manual/admin-panel/#contas","title":"Contas","text":""},{"location":"manual/admin-panel/#cadastrar-nova-conta","title":"Cadastrar nova conta","text":"<p>Para cadastrar um nova conta, informe os seguintes dados:</p> <ul> <li>Nome da conta para identifica\u00e7\u00e3o. Exemplo: Loja Matriz;</li> <li>C\u00f3digo da ag\u00eancia;</li> <li>N\u00famero da conta.</li> </ul> <p>Em seguida clique em Salvar.</p> <p>Importante</p> <p>N\u00e3o \u00e9 poss\u00edvel adicionar contas iguais para a mesma ag\u00eancia.</p>"},{"location":"manual/admin-panel/#detalhes-da-conta","title":"Detalhes da conta","text":"<p>As contas que s\u00e3o criadas ficam listadas na tabela <code>Contas Cadastradas</code>. Ap\u00f3s criar uma conta \u00e9 necess\u00e1rio editar os detalhes para que o Pix Service inicie o monitoramento.</p> <p>Para editar uma conta clique no bot\u00e3o  e ser\u00e1 aberto uma janela para que insira as credenciais de acesso, certificados e poss\u00edveis remetentes ignorados.</p> <p></p> <p>\u00c9 aqui onde voc\u00ea deve colocar o ClientID, ClientSecret e fazer o upload do certificado e chave que voc\u00ea baixou quando criou a integra\u00e7\u00e3o l\u00e1 no Internet Banking.</p>"},{"location":"manual/admin-panel/#remetentes-ignorados","title":"Remetentes ignorados","text":"<p>Esse \u00e9 um recurso que voc\u00ea utiliza quando quer que o Pix Verifier ignore certos remetentes, dessa forma toda transa\u00e7\u00e3o recebida desse CPF ou CNPJ n\u00e3o ser\u00e1 salva e nem exibida na tabela de transa\u00e7\u00f5es da p\u00e1gina principal. </p> <p>Para cadastrar basta digitar o CPF ou CNPJ sem nenhuma pontua\u00e7\u00e3o, apenas n\u00fameros. Para adicionar mais de um remetente ignorado separe por <code>;</code> (ponto e v\u00edrgula).</p> <p>Importante</p> <p>Toda altera\u00e7\u00e3o no detalhe da conta para que surta efeito \u00e9 preciso reiniciar o Pix Service. No dashboard pare o servi\u00e7o e em seguida inicie novamente, assim o Pix Service carrega as informa\u00e7\u00f5es atualizadas.</p>"},{"location":"manual/admin-panel/#deletar-conta","title":"Deletar conta","text":"<p>Caso precise deletar uma conta \u00e9 s\u00f3 clicar no bot\u00e3o  e confirmar.</p> <p>CUIDADO</p> <p>Esse \u00e9 um processo irrevers\u00edvel, ao deletar uma conta, todos os Pix conciliados e dados dessa conta tamb\u00e9m ser\u00e3o apagados!</p>"},{"location":"manual/admin-panel/#logs","title":"Logs","text":"<p>Nessa se\u00e7\u00e3o \u00e9 onde voc\u00ea pode acompanhar os logs do Pix Service.</p> <p></p> <p>Do lado esquerdo encontra-se a lista de logs dispon\u00edveis. O comportamento padr\u00e3o do Pix Service \u00e9 rotacionar os logs quando atingirem 10MB, e manter os \u00faltimos 5 arquivos de log. Ent\u00e3o, ao rotacionar o log, o log atual ser\u00e1 renomeado para pix-service.log.1 e assim por diante. </p> <p>Para selecionar um arquivo de log d\u00ea um clique duplo no nome do arquivo, ao selecionar o pix-service.log e enquanto estiver selecionado, o auto update estar\u00e1 ativo e atualizando o log.</p> <p>Com excess\u00e3o do pix-service.log todos os arquivos de log quando baixados exibem o conte\u00fado completo, enquanto o log atual exibe apenas as 50 \u00faltimas linhas.</p>"}]}